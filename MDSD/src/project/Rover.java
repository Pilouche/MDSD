// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package project;

import java.util.ArrayList;
import java.util.List;

import area.Environment;
import project.Position;

/************************************************************/
/**
 * 
 */
public class Rover extends RobotAvatar {
	
	private Position position;
	/**
	 * 
	 */
	private int rewardPoints;
	/**
	 * 
	 */
	public Environment inEnvironment;
	private List<RoverObserver> obs;
	
	public Rover(Position position, String name) {
		super(position, name);
		this.position = position;
		obs = new ArrayList<RoverObserver>();
	}

	/**
	 * 
	 * @return 
	 */
	public int getRewardPoints() {
		return rewardPoints;
	}

	/**
	 * 
	 * @param points 
	 */
	public void addRewardPoints(int points) {
		rewardPoints += points; 
	}

	/**
	 * 
	 * @param point 
	 */
	public void moveToPoint(Position pos) {
		this.setDestination(pos);
		System.out.println("Rover: " + super.getName() + " Moving to: " + pos.getX() + ", " + pos.getZ());
	}
	
	public Position getPosition() {
		return this.position;
	}
	
	public Environment getEnvironment() {
		return this.inEnvironment;
	}
	
	public void observe(RoverObserver obs) {
		this.obs.add(obs);
	}
	
	public void removeObserver(RoverObserver obs) {
		this.obs.remove(obs);
	}

	public void update() {
		//System.out.println("Updateing rover");
		Position newPosition = new Position(super.getPosition().getX(), super.getPosition().getZ());
		//if(newPosition.getX() != position.getX() || newPosition.getZ() != position.getZ()) {
			//System.out.println("New position: " + newPosition.toString());
			position = newPosition;
			for(RoverObserver o : obs) {
				o.updateRoverPosition(position);
			}
		//}
	}
	
};
